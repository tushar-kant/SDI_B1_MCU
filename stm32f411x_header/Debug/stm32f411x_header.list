
stm32f411x_header.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000378  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000510  08000518  00010518  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000510  08000510  00010518  2**0
                  CONTENTS
  4 .ARM          00000000  08000510  08000510  00010518  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000510  08000518  00010518  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000510  08000510  00010510  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000514  08000514  00010514  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010518  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000518  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000518  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010518  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009e0  00000000  00000000  00010548  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000342  00000000  00000000  00010f28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00011270  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  00011338  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002234  00000000  00000000  000113c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000012ae  00000000  00000000  000135fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008915  00000000  00000000  000148aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001d1bf  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000200  00000000  00000000  0001d210  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080004f8 	.word	0x080004f8

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	080004f8 	.word	0x080004f8

080001d8 <gpio_config>:

#include <stdint.h>
#include "stdio.h"
#include"stm32f411x.h"

void gpio_config(){
 80001d8:	b580      	push	{r7, lr}
 80001da:	b084      	sub	sp, #16
 80001dc:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GpioLed.pGPIOx = GPIOA;
 80001de:	4b0c      	ldr	r3, [pc, #48]	; (8000210 <gpio_config+0x38>)
 80001e0:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber= GPIO_PIN_NO_5;
 80001e2:	2305      	movs	r3, #5
 80001e4:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode= GPIO_MODE_OUT;
 80001e6:	2301      	movs	r3, #1
 80001e8:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed= GPIO_SPEED_LOW;
 80001ea:	2300      	movs	r3, #0
 80001ec:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType= GPIO_OP_TYPE_PP;
 80001ee:	2300      	movs	r3, #0
 80001f0:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl= GPIO_NO_PUPD;
 80001f2:	2300      	movs	r3, #0
 80001f4:	72fb      	strb	r3, [r7, #11]
	GPIO_PeriClockControl(GPIOA,ENABLE);
 80001f6:	2101      	movs	r1, #1
 80001f8:	4805      	ldr	r0, [pc, #20]	; (8000210 <gpio_config+0x38>)
 80001fa:	f000 f861 	bl	80002c0 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 80001fe:	1d3b      	adds	r3, r7, #4
 8000200:	4618      	mov	r0, r3
 8000202:	f000 f8bb 	bl	800037c <GPIO_Init>
}
 8000206:	bf00      	nop
 8000208:	3710      	adds	r7, #16
 800020a:	46bd      	mov	sp, r7
 800020c:	bd80      	pop	{r7, pc}
 800020e:	bf00      	nop
 8000210:	40020000 	.word	0x40020000

08000214 <delay>:
#include <stdint.h>
#include "stdio.h"
#include"stm32f411x.h"
void delay(int T)
{
 8000214:	b480      	push	{r7}
 8000216:	b085      	sub	sp, #20
 8000218:	af00      	add	r7, sp, #0
 800021a:	6078      	str	r0, [r7, #4]
	while(T--)
 800021c:	e009      	b.n	8000232 <delay+0x1e>
	{
		for(uint32_t i=0;i<500000;i++);
 800021e:	2300      	movs	r3, #0
 8000220:	60fb      	str	r3, [r7, #12]
 8000222:	e002      	b.n	800022a <delay+0x16>
 8000224:	68fb      	ldr	r3, [r7, #12]
 8000226:	3301      	adds	r3, #1
 8000228:	60fb      	str	r3, [r7, #12]
 800022a:	68fb      	ldr	r3, [r7, #12]
 800022c:	4a07      	ldr	r2, [pc, #28]	; (800024c <delay+0x38>)
 800022e:	4293      	cmp	r3, r2
 8000230:	d9f8      	bls.n	8000224 <delay+0x10>
	while(T--)
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	1e5a      	subs	r2, r3, #1
 8000236:	607a      	str	r2, [r7, #4]
 8000238:	2b00      	cmp	r3, #0
 800023a:	d1f0      	bne.n	800021e <delay+0xa>
	}
}
 800023c:	bf00      	nop
 800023e:	bf00      	nop
 8000240:	3714      	adds	r7, #20
 8000242:	46bd      	mov	sp, r7
 8000244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000248:	4770      	bx	lr
 800024a:	bf00      	nop
 800024c:	0007a11f 	.word	0x0007a11f

08000250 <main>:

int main(void)
{
 8000250:	b580      	push	{r7, lr}
 8000252:	af00      	add	r7, sp, #0
//	GpioLed.GPIO_PinConfig.GPIO_PinSpeed= GPIO_SPEED_LOW;
//	GpioLed.GPIO_PinConfig.GPIO_PinOPType= GPIO_OP_TYPE_PP;
//	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl= GPIO_NO_PUPD;
//	GPIO_PeriClockControl(GPIOA,ENABLE);
//	GPIO_Init(&GpioLed);
	gpio_config();
 8000254:	f7ff ffc0 	bl	80001d8 <gpio_config>
	while(1)
	{
		GPIO_ToggleOutputPin(GPIOA,GPIO_PIN_NO_5);
 8000258:	2105      	movs	r1, #5
 800025a:	4803      	ldr	r0, [pc, #12]	; (8000268 <main+0x18>)
 800025c:	f000 f913 	bl	8000486 <GPIO_ToggleOutputPin>
		delay(5);
 8000260:	2005      	movs	r0, #5
 8000262:	f7ff ffd7 	bl	8000214 <delay>
		GPIO_ToggleOutputPin(GPIOA,GPIO_PIN_NO_5);
 8000266:	e7f7      	b.n	8000258 <main+0x8>
 8000268:	40020000 	.word	0x40020000

0800026c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800026c:	480d      	ldr	r0, [pc, #52]	; (80002a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000270:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000274:	480c      	ldr	r0, [pc, #48]	; (80002a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000276:	490d      	ldr	r1, [pc, #52]	; (80002ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000278:	4a0d      	ldr	r2, [pc, #52]	; (80002b0 <LoopForever+0xe>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800027c:	e002      	b.n	8000284 <LoopCopyDataInit>

0800027e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000280:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000282:	3304      	adds	r3, #4

08000284 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000284:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000286:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000288:	d3f9      	bcc.n	800027e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028a:	4a0a      	ldr	r2, [pc, #40]	; (80002b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800028c:	4c0a      	ldr	r4, [pc, #40]	; (80002b8 <LoopForever+0x16>)
  movs r3, #0
 800028e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000290:	e001      	b.n	8000296 <LoopFillZerobss>

08000292 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000292:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000294:	3204      	adds	r2, #4

08000296 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000296:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000298:	d3fb      	bcc.n	8000292 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029a:	f000 f909 	bl	80004b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029e:	f7ff ffd7 	bl	8000250 <main>

080002a2 <LoopForever>:

LoopForever:
    b LoopForever
 80002a2:	e7fe      	b.n	80002a2 <LoopForever>
  ldr   r0, =_estack
 80002a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ac:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b0:	08000518 	.word	0x08000518
  ldr r2, =_sbss
 80002b4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b8:	2000001c 	.word	0x2000001c

080002bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002bc:	e7fe      	b.n	80002bc <ADC_IRQHandler>
	...

080002c0 <GPIO_PeriClockControl>:
#include "stm32f411x_driver_gpio.h"

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)		// THIS FUNCTION ENABLES OR DISABLES REGISTER CLOCK
{
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	6078      	str	r0, [r7, #4]
 80002c8:	460b      	mov	r3, r1
 80002ca:	70fb      	strb	r3, [r7, #3]
	if(EnorDi==ENABLE)
 80002cc:	78fb      	ldrb	r3, [r7, #3]
 80002ce:	2b01      	cmp	r3, #1
 80002d0:	d140      	bne.n	8000354 <GPIO_PeriClockControl+0x94>
	{
		if(pGPIOx == GPIOA)
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a22      	ldr	r2, [pc, #136]	; (8000360 <GPIO_PeriClockControl+0xa0>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d106      	bne.n	80002e8 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002da:	4b22      	ldr	r3, [pc, #136]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 80002dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002de:	4a21      	ldr	r2, [pc, #132]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6313      	str	r3, [r2, #48]	; 0x30
	}
	else
	{
		//TODO
	}
}
 80002e6:	e035      	b.n	8000354 <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOB)
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a1f      	ldr	r2, [pc, #124]	; (8000368 <GPIO_PeriClockControl+0xa8>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002f0:	4b1c      	ldr	r3, [pc, #112]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f4:	4a1b      	ldr	r2, [pc, #108]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 80002f6:	f043 0302 	orr.w	r3, r3, #2
 80002fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fc:	e02a      	b.n	8000354 <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOC)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a1a      	ldr	r2, [pc, #104]	; (800036c <GPIO_PeriClockControl+0xac>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000306:	4b17      	ldr	r3, [pc, #92]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030a:	4a16      	ldr	r2, [pc, #88]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 800030c:	f043 0304 	orr.w	r3, r3, #4
 8000310:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000312:	e01f      	b.n	8000354 <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOD)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a16      	ldr	r2, [pc, #88]	; (8000370 <GPIO_PeriClockControl+0xb0>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800031c:	4b11      	ldr	r3, [pc, #68]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a10      	ldr	r2, [pc, #64]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 8000322:	f043 0308 	orr.w	r3, r3, #8
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000328:	e014      	b.n	8000354 <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOE)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a11      	ldr	r2, [pc, #68]	; (8000374 <GPIO_PeriClockControl+0xb4>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000332:	4b0c      	ldr	r3, [pc, #48]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a0b      	ldr	r2, [pc, #44]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 8000338:	f043 0310 	orr.w	r3, r3, #16
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033e:	e009      	b.n	8000354 <GPIO_PeriClockControl+0x94>
		else if(pGPIOx == GPIOH)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a0d      	ldr	r2, [pc, #52]	; (8000378 <GPIO_PeriClockControl+0xb8>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d105      	bne.n	8000354 <GPIO_PeriClockControl+0x94>
			GPIOH_PCLK_EN();
 8000348:	4b06      	ldr	r3, [pc, #24]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a05      	ldr	r2, [pc, #20]	; (8000364 <GPIO_PeriClockControl+0xa4>)
 800034e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000354:	bf00      	nop
 8000356:	370c      	adds	r7, #12
 8000358:	46bd      	mov	sp, r7
 800035a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035e:	4770      	bx	lr
 8000360:	40020000 	.word	0x40020000
 8000364:	40023800 	.word	0x40023800
 8000368:	40020400 	.word	0x40020400
 800036c:	40020800 	.word	0x40020800
 8000370:	40020c00 	.word	0x40020c00
 8000374:	40021000 	.word	0x40021000
 8000378:	40021c00 	.word	0x40021c00

0800037c <GPIO_Init>:


// GPIO_INIT

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800037c:	b580      	push	{r7, lr}
 800037e:	b084      	sub	sp, #16
 8000380:	af00      	add	r7, sp, #0
 8000382:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000384:	2300      	movs	r3, #0
 8000386:	60fb      	str	r3, [r7, #12]
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	2101      	movs	r1, #1
 800038e:	4618      	mov	r0, r3
 8000390:	f7ff ff96 	bl	80002c0 <GPIO_PeriClockControl>
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	795b      	ldrb	r3, [r3, #5]
 8000398:	2b03      	cmp	r3, #3
 800039a:	d810      	bhi.n	80003be <GPIO_Init+0x42>
	{
		temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	795b      	ldrb	r3, [r3, #5]
 80003a0:	461a      	mov	r2, r3
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	791b      	ldrb	r3, [r3, #4]
 80003a6:	005b      	lsls	r3, r3, #1
 80003a8:	fa02 f303 	lsl.w	r3, r2, r3
 80003ac:	60fb      	str	r3, [r7, #12]

		pGPIOHandle->pGPIOx->MODER |= temp;
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	6819      	ldr	r1, [r3, #0]
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	68fa      	ldr	r2, [r7, #12]
 80003ba:	430a      	orrs	r2, r1
 80003bc:	601a      	str	r2, [r3, #0]
	}
	else
	{

	}
		temp=0;
 80003be:	2300      	movs	r3, #0
 80003c0:	60fb      	str	r3, [r7, #12]
		//configuring pin speed
		temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	799b      	ldrb	r3, [r3, #6]
 80003c6:	461a      	mov	r2, r3
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	791b      	ldrb	r3, [r3, #4]
 80003cc:	005b      	lsls	r3, r3, #1
 80003ce:	fa02 f303 	lsl.w	r3, r2, r3
 80003d2:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	689a      	ldr	r2, [r3, #8]
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	791b      	ldrb	r3, [r3, #4]
 80003de:	005b      	lsls	r3, r3, #1
 80003e0:	2103      	movs	r1, #3
 80003e2:	fa01 f303 	lsl.w	r3, r1, r3
 80003e6:	43db      	mvns	r3, r3
 80003e8:	4619      	mov	r1, r3
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	400a      	ands	r2, r1
 80003f0:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	6899      	ldr	r1, [r3, #8]
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	68fa      	ldr	r2, [r7, #12]
 80003fe:	430a      	orrs	r2, r1
 8000400:	609a      	str	r2, [r3, #8]

		//configure pin as PULL UP OR PULL DOWN
		temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	79db      	ldrb	r3, [r3, #7]
 8000406:	461a      	mov	r2, r3
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	791b      	ldrb	r3, [r3, #4]
 800040c:	005b      	lsls	r3, r3, #1
 800040e:	fa02 f303 	lsl.w	r3, r2, r3
 8000412:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	68da      	ldr	r2, [r3, #12]
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	791b      	ldrb	r3, [r3, #4]
 800041e:	005b      	lsls	r3, r3, #1
 8000420:	2103      	movs	r1, #3
 8000422:	fa01 f303 	lsl.w	r3, r1, r3
 8000426:	43db      	mvns	r3, r3
 8000428:	4619      	mov	r1, r3
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	400a      	ands	r2, r1
 8000430:	60da      	str	r2, [r3, #12]
		pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	68d9      	ldr	r1, [r3, #12]
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	68fa      	ldr	r2, [r7, #12]
 800043e:	430a      	orrs	r2, r1
 8000440:	60da      	str	r2, [r3, #12]

		//configure output type
		temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	7a1b      	ldrb	r3, [r3, #8]
 8000446:	461a      	mov	r2, r3
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	791b      	ldrb	r3, [r3, #4]
 800044c:	fa02 f303 	lsl.w	r3, r2, r3
 8000450:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << ( pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	685a      	ldr	r2, [r3, #4]
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	791b      	ldrb	r3, [r3, #4]
 800045c:	4619      	mov	r1, r3
 800045e:	2303      	movs	r3, #3
 8000460:	408b      	lsls	r3, r1
 8000462:	43db      	mvns	r3, r3
 8000464:	4619      	mov	r1, r3
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	400a      	ands	r2, r1
 800046c:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |= temp;
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	6859      	ldr	r1, [r3, #4]
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	68fa      	ldr	r2, [r7, #12]
 800047a:	430a      	orrs	r2, r1
 800047c:	605a      	str	r2, [r3, #4]
}
 800047e:	bf00      	nop
 8000480:	3710      	adds	r7, #16
 8000482:	46bd      	mov	sp, r7
 8000484:	bd80      	pop	{r7, pc}

08000486 <GPIO_ToggleOutputPin>:
void GPIO_WriteOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{
	pGPIOx->ODR=Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000486:	b480      	push	{r7}
 8000488:	b083      	sub	sp, #12
 800048a:	af00      	add	r7, sp, #0
 800048c:	6078      	str	r0, [r7, #4]
 800048e:	460b      	mov	r3, r1
 8000490:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^=(1<<PinNumber);
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	695b      	ldr	r3, [r3, #20]
 8000496:	78fa      	ldrb	r2, [r7, #3]
 8000498:	2101      	movs	r1, #1
 800049a:	fa01 f202 	lsl.w	r2, r1, r2
 800049e:	405a      	eors	r2, r3
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	615a      	str	r2, [r3, #20]
}
 80004a4:	bf00      	nop
 80004a6:	370c      	adds	r7, #12
 80004a8:	46bd      	mov	sp, r7
 80004aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ae:	4770      	bx	lr

080004b0 <__libc_init_array>:
 80004b0:	b570      	push	{r4, r5, r6, lr}
 80004b2:	4d0d      	ldr	r5, [pc, #52]	; (80004e8 <__libc_init_array+0x38>)
 80004b4:	4c0d      	ldr	r4, [pc, #52]	; (80004ec <__libc_init_array+0x3c>)
 80004b6:	1b64      	subs	r4, r4, r5
 80004b8:	10a4      	asrs	r4, r4, #2
 80004ba:	2600      	movs	r6, #0
 80004bc:	42a6      	cmp	r6, r4
 80004be:	d109      	bne.n	80004d4 <__libc_init_array+0x24>
 80004c0:	4d0b      	ldr	r5, [pc, #44]	; (80004f0 <__libc_init_array+0x40>)
 80004c2:	4c0c      	ldr	r4, [pc, #48]	; (80004f4 <__libc_init_array+0x44>)
 80004c4:	f000 f818 	bl	80004f8 <_init>
 80004c8:	1b64      	subs	r4, r4, r5
 80004ca:	10a4      	asrs	r4, r4, #2
 80004cc:	2600      	movs	r6, #0
 80004ce:	42a6      	cmp	r6, r4
 80004d0:	d105      	bne.n	80004de <__libc_init_array+0x2e>
 80004d2:	bd70      	pop	{r4, r5, r6, pc}
 80004d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80004d8:	4798      	blx	r3
 80004da:	3601      	adds	r6, #1
 80004dc:	e7ee      	b.n	80004bc <__libc_init_array+0xc>
 80004de:	f855 3b04 	ldr.w	r3, [r5], #4
 80004e2:	4798      	blx	r3
 80004e4:	3601      	adds	r6, #1
 80004e6:	e7f2      	b.n	80004ce <__libc_init_array+0x1e>
 80004e8:	08000510 	.word	0x08000510
 80004ec:	08000510 	.word	0x08000510
 80004f0:	08000510 	.word	0x08000510
 80004f4:	08000514 	.word	0x08000514

080004f8 <_init>:
 80004f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004fa:	bf00      	nop
 80004fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004fe:	bc08      	pop	{r3}
 8000500:	469e      	mov	lr, r3
 8000502:	4770      	bx	lr

08000504 <_fini>:
 8000504:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000506:	bf00      	nop
 8000508:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800050a:	bc08      	pop	{r3}
 800050c:	469e      	mov	lr, r3
 800050e:	4770      	bx	lr
